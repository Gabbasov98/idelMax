$("._tab").click(function() {
    let parentBlock = $(this).parents("._tabs-parent")
    let tabId = $(this).attr("data-tab")
    $(parentBlock).find("._tab").removeClass("_active")
    $(this).addClass("_active")
    $(parentBlock).find(".tab-content").removeClass("_active")
    $(parentBlock).find(`.${tabId}`).addClass("_active")
})

$(".qa-card__show").click(function () {
    $(this).parents(".qa-card").toggleClass("_active")
    $(this).siblings(".qa-card__hidden").slideToggle()
})

$(".guide-nav__show").click(function () {
    $(this).parents(".guide-nav__item").toggleClass("_open")
    $(this).siblings(".guide-nav__hidden").slideToggle()
})

$(".guide__mob").click(function () {
    $(this).toggleClass("_open")
    $(".guide-nav").slideToggle()
})

$(".order-group__show").click(function () {
    $(this).parents(".order-group").toggleClass("_active")
    $(this).siblings(".order-group__hidden").slideToggle()
})

$(".favourite-btn").click(function () {
    $(this).toggleClass("_added")
})

$("[data-copy]").click(function() {
    let text = $(this).attr("data-copy")
    let $tmp = $("<textarea>");
    $("body").append($tmp);
    $tmp.val(text).select();
    document.execCommand("copy");
    $tmp.remove();
})

let productCards = document.querySelectorAll(".product-card")
productCards.forEach(productCard => {
    let btn = productCard.querySelector(".product-card__btn")
    btn.onclick = function (e) {
        productCard.classList.add("_added")
        cartAnim(productCard,e)
    }
})

function cartAnim(card,e) {
    let headerCart = document.querySelector(".header-cart");
    let imgSrc = card.querySelector(".product-card__img img").getAttribute("src");

    $("body").append('' +
        `<div class="animtocart">
            <img src="${imgSrc}" alt="">
        </div>`
    );
    $('.animtocart').css({
        'position' : 'fixed',
        'z-index' : '9999999999',
        'left' : card.getBoundingClientRect().x + 'px',
        'top' : card.getBoundingClientRect().y + 'px',
    });
    $('.animtocart').animate({
        top: "1em",
        left: headerCart.getBoundingClientRect().x + 'px',
        opacity: 0,
        // width: 0,
        // height: 0
    }, 800, function(){
        $('.header-cart').addClass("_active")
        $('.header-cart__count span').html(
            +$('.header-cart__count span').html() + 1
        )
        $(this).remove();
    });
}
$(".header__catalog-btn").click(function () {
    $(".header").toggleClass("_open")
    if(window.innerWidth<993){
        $("body").toggleClass("fixed-body")
    }
})

$(document).mouseup( function(e){
    if(window.innerWidth<993){
        return
    }
    let div = $( ".header-menu" );
    if ( !div.is(e.target)
        && div.has(e.target).length === 0 ) {
        if($(".header").hasClass("_open")){
            $(".header").removeClass("_open")
        }
    }
});


function fixHeader() {
    let scroll = $(window).scrollTop();
    let header = $(".header").height()

    if (scroll >= header) {
        $(".header").addClass("_fix");
    } else {
        $(".header").removeClass("_fix");
    }
}

$(window).scroll(function() {
    fixHeader()
});
fixHeader()

$(".menu-item__show").click(function () {
    $(this).parents(".menu-item").toggleClass("_active")
    $(this).siblings(".menu-item__hidden").slideToggle()
})

$(window).on('load resize', function(){
    if ($(window).width() <= 992) {
        $('.header-top').insertAfter('.header-menu__grid');
    } else{
        $('.header-top').insertBefore('.header-middle');
    }
});
function Sliders() {
    let SlidersArray = []

    let sliders = document.querySelectorAll(".slider")
    sliders.forEach((slider,index) => {
        slider.setAttribute("data-slider-id",index)

        SlidersArray[index] = new Swiper(`.slider[data-slider-id="${index}"] .swiper-container`, {
            slidesPerView: "auto",
            spaceBetween: 0,
            watchSlidesProgress: true,
            preventClicks :true,
            a11y: false,
            observer: true,
            observeParents: true,
            observeSlideChildren: true,

            navigation: {
                nextEl: `.slider[data-slider-id="${index}"] .swiper-button-next`,
                prevEl: `.slider[data-slider-id="${index}"] .swiper-button-prev`,
            },
            pagination: {
                el: `.slider[data-slider-id="${index}"] .swiper-pagination`,
                type: 'bullets',
                clickable: true,
            },
        })
    })
}

function gallery() {
    let SlidersArray = []

    let sliders = document.querySelectorAll(".gallery")
    sliders.forEach((slider,index) => {
        slider.setAttribute("data-slider-id",index)
        let gallery = {
            mySwiper: {},
            mySwiper2: {}
        }

        gallery.mySwiper = new Swiper(`.gallery[data-slider-id="${index}"] .mySwiper`, {
            spaceBetween: 0,
            slidesPerView: "auto",
            freeMode: true,
            watchSlidesProgress: true,
            direction: "vertical",
            breakpoints: {
                320: {
                    direction: "horizontal",
                },
                992: {
                    direction: "vertical",
                }
            }
        });
        gallery.mySwiper2 = new Swiper(`.gallery[data-slider-id="${index}"] .mySwiper2`, {
            spaceBetween: 0,
            direction: "vertical",
            loop: true,
            navigation: {
                nextEl: `.gallery[data-slider-id="${index}"] .swiper-button-next`,
                prevEl: `.gallery[data-slider-id="${index}"] .swiper-button-prev`,
            },
            thumbs: {
                swiper:  gallery.mySwiper,
            },
            breakpoints: {
                320: {
                    direction: "horizontal",
                },
                992: {
                    direction: "vertical",
                }
            }
        });

        SlidersArray[index] = gallery
    })

}


Sliders()
gallery()

$(".filter-group").each(function () {
    let group = $(this);
    let more = $(this).find(".filter-group__more");

    $(more).click(function () {
        $(group).toggleClass("_show-all-checks");
    })
})

$("._toggle-filter").click(function () {
    $("body").toggleClass("fixed-body")
    $("body").toggleClass("_open-filter")
})

let filterSliders = document.querySelectorAll(".filter-slider")

filterSliders.forEach(slider => {
    const rangeSlider = slider.querySelector(`.range-slider`)
    const rangeInput0 = slider.querySelector(`.range-slider__input1`)
    const rangeInput1 = slider.querySelector(`.range-slider__input2`)
    const rangeInputs = [rangeInput0, rangeInput1]

    let startValue1 = +slider.getAttribute("data-start")
    let startValue2 = +slider.getAttribute("data-start2")
    let min = +slider.getAttribute("data-min")
    let max = +slider.getAttribute("data-max")

    if (rangeSlider) {
        noUiSlider.create(rangeSlider, {
            start: [startValue1, startValue2],
            connect: true,
            step: 1,
            range: {
                'min': min,
                'max': max
            }
        });
    }
    if (rangeSlider) {
        rangeSlider.noUiSlider.on('update', function(values, handle) {
            rangeInputs[handle].value = Math.round(values[handle])
        })
        rangeInputs.forEach((el, index) => {
            el.addEventListener('change', (e) => {
                setRangeSlider(index, e.currentTarget.value)
            })
        })
    }
    const setRangeSlider = (i, value) => {
        let array = [null, null];
        array[i] = value;

        rangeSlider.noUiSlider.set(array);

    };
})
function calc(){
    $('.cartcalc').each(function (i,el) {
        let plus = $(el).find(".ccalc-plus")
        let minus = $(el).find(".ccalc-minus")
        let input = $(el).find("input")

        $(minus).click(function(e) {
            let a = $(input).val();
            if (a > 1) {
                let b = +a - 1;
                $(input).val(b);
                $(input).trigger('change');
            } else {
                $(input).val(a);
                $(this).parents(".product-card").removeClass("_added")
            }
            setMinusBtnClickability()
            e.stopImmediatePropagation()

            $('.header-cart__count span').html(
                +$('.header-cart__count span').html() - 1
            )
        });

        $(plus).click(function(e) {
            let a = $(input).val();
            let b = +a + 1;
            $(input).val(b);
            $(input).trigger('change');
            setMinusBtnClickability(this)
            e.stopImmediatePropagation()
            $('.header-cart__count span').html(
                +$('.header-cart__count span').html() + 1
            )
        });

        function setMinusBtnClickability() {
            let val = +$(input).val()
            if(val === 1){
                $(minus).addClass("_disabled")
            } else{
                $(minus).removeClass("_disabled")
            }
        }

        setMinusBtnClickability()
    })
}
calc()

$(".filter-group--toggle .filter-group__top").click(function () {
    $(this).parents(".filter-group").toggleClass("_active")
    $(this).siblings(".filter-group__bottom").slideToggle()
})
$(".rating-block").each(function (i,el) {
    let value = +$(el).attr("data-rating") / 5 * 100

    $(el).find(".rating__fill").css("width", `${value}%`)
    $(el).find(".rating-block__num").html($(el).attr("data-rating"))

    let stars = $(el).find(".rating")

    $(stars).mousemove(function (e) {
        let percent = e.offsetX / $(this).outerWidth() * 100;
        $(el).find(".rating__fill").css("width", `${percent}%`)
    })

    $(stars).mouseleave(function (e) {
        let value = +$(el).attr("data-rating") / 5 * 100
        $(el).find(".rating__fill").css("width", `${value}%`)
        $(el).find(".rating-block__num").html($(el).attr("data-rating"))
    })

    $(stars).click(function (e) {
        let percent = e.offsetX / $(this).outerWidth() * 100;
        $(el).attr("data-rating",(percent * 5 / 100).toFixed(1))
        $(el).find(".rating-block__num").html($(el).attr("data-rating"))
    })
})

let nav = document.querySelector('.lk__tabs')

window.onresize = function(event) {
    setActiveTabVisible()
};

window.addEventListener('DOMContentLoaded', () => {
    setActiveTabVisible()
})

function setActiveTabVisible() {
    if (window.innerWidth > 992) {
        return
    }
    if (nav) {
        let navLinks = document.querySelectorAll('.lk__tab')
        let activeLink = document.querySelector('.lk__tabs ._active')
        activeLink.scrollIntoView({
            behavior: "smooth",
            inline: "center",
            block: 'nearest',
        })
    }
}
let fileInput = document.querySelector("[data-upload-id='file-input']")

if(fileInput){
    console.log(fileInput)
    const upload = new FileUploadWithPreview.FileUploadWithPreview('file-input');

    upload.options.multiple = true

    $(document).on('change', '.input-container input', function(e) {
        $(this).parents(".file-input").addClass("_uploaded")
    })

    $(document).on('click', '.image-preview-item-clear', function(e) {
        let count = $(this).parents(".file-input").find(".image-preview-item").length
        if(count === 1){
            $(this).parents(".file-input").removeClass("_uploaded")
        }
    })
}



let body = document.querySelector("body")
let modalTogglers = document.querySelectorAll("[data-modal]")
let modals = document.querySelectorAll(".modal")

modalTogglers.forEach(el => {
    el.onclick = function () {
        let modalId = el.getAttribute("data-modal")
        openModal(modalId)
    }
})

function closeModals() {
    modals.forEach(modal => {
        modal.classList.remove("_active")
        body.classList.remove("fixed-body2")
    })
}

function openModal(modalId) {
    closeModals()
    let modal = document.querySelector(`#${modalId}`)
    let closeButtons = modal.querySelectorAll(`._close-modal`)

    modal.classList.add("_active")
    body.classList.add("fixed-body2")


    closeButtons.forEach(btn => {
        btn.onclick = ()=> {
            modal.classList.remove("_active")
            body.classList.remove("fixed-body2")
        }
    })
}

var getScrollBarSize = (function() {
    var el = window.document.createElement('textarea'), style = {
        'visibility': 'hidden', 'position': 'absolute', 'zIndex': '-2147483647',
        'top': '-1000px', 'left': '-1000px', 'width': '1000px', 'height': '1000px',
        'overflow': 'scroll', 'margin': '0', 'border': '0', 'padding': '0'
    }, support = el.clientWidth !== undefined && el.offsetWidth !== undefined;

    for (var key in style) {
        if (style.hasOwnProperty(key)) {
            el.style[key] = style[key];
        }
    }

    return function() {
        var size = null;
        if (support && window.document.body) {
            window.document.body.appendChild(el);
            size = [el.offsetWidth - el.clientWidth, el.offsetHeight - el.clientHeight];
            window.document.body.removeChild(el);
        }

        document.documentElement.style.setProperty('--scrollWidth', `${size[0]}px`);
        return size;
    };
})();


window.addEventListener('DOMContentLoaded', () => {
    fix100vh();
    window.addEventListener('resize', () => {
        fix100vh();
        getScrollBarSize()
    })

    getScrollBarSize()

    $(".m-select select").niceSelect()
    // $('input[type="tel"]').mask('+7 (999) 999-99-99', { autoclear: false }, { placeholder: '+7 (   )    -  -  ' });
})

function fix100vh() {
    let vh = window.innerHeight * 0.01;
    document.documentElement.style.setProperty('--vh', `${vh}px`);
}

//# sourceMappingURL=../sourcemaps/main.min.js.map
